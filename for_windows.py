import telebot;
import time
import schedule
import json
import csv
from tempfile import NamedTemporaryFile
import shutil
import datetime
from pyowm.owm import OWM
import pandas as pd
import logging
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from telebot import types
from aiogram.dispatcher.filters import Text
from matplotlib import pyplot as plt
from matplotlib import style
from dateutil import parser as dt_parser
import numpy
import tokens
bot = telebot.TeleBot(tokens.bot);
@bot.message_handler(commands=['start'])
def start_message(message):
	keyboard = telebot.types.ReplyKeyboardMarkup(True)
	keyboard.row('–ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ –æ—Ç—á–µ—Ç', '–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ')
	keyboard.row('–°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—É—Å—Ç–æ–π', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
	fname=message.from_user.id
	idname = str(fname) + '.csv'
	newtable(idname)
	bot.send_message(message.chat.id, '–£—Ä–∞!', reply_markup=keyboard)
@bot.message_handler(commands=['menu'])
def menu_new(message):
	keyboard = telebot.types.ReplyKeyboardMarkup(True)
	keyboard.row('–ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ –æ—Ç—á–µ—Ç', '–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ')
	keyboard.row('–°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—É—Å—Ç–æ–π', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
	bot.send_message(message.chat.id, '–ù–∞–¥–µ—é—Å—å –ø–æ—è–≤–∏–ª–æ—Å—å)', reply_markup=keyboard)
@bot.message_handler(content_types=["text"])
def any_msg(message):
	fname=message.from_user.id
	global idname
	idname = str(fname) + '.csv'
	idname_photo = str(fname) + '.png'
	global b
	if message.text == '–ü—Ä–∏–≤–µ—Ç':
		bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, " + str(message.from_user.first_name))
	elif message.text == '–°–ø–∞—Å–∏–±–æ':
		bot.send_message(message.from_user.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞))))")
	elif message.text == '/help':
		bot.send_message(message.from_user.id, '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–Ω—è, –º–µ—Å—è—Ü–∞, –≥–æ–¥–∞.üòä')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 1.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ –æ—Ç—á–µ—Ç", —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–µ–±–µ —Ç–∞–±–ª–∏—Ü—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–ø–æ–ª–Ω—è–ª –∑–∞ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ç–≤–æ–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –ø–æ–≥–æ–¥—ã.üöÄ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 2.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ", —Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–æ–µ–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏.üòú')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 3.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—É—Å—Ç–æ–π", —Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –≤–Ω–æ—Å–∏–ª –¥–æ —ç—Ç–æ–≥–æ, –ø—Ä–æ–ø–∞–¥—É—Ç.üòÄ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 4.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –ø—É–Ω–∫—Ç "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", —Ç–æ —Ç–µ–±–µ –ø—Ä–∏–¥—É—Ç —ç—Ç–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è.üòÇ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 5.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å –Ω—É–ª—è –≤—Å–µ, —Ç–æ –≤—ã–±–µ—Ä–∏ /start')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 6.‚ùóÔ∏è\n–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —É –≤–∞—Å –ø—Ä–æ–ø–∞–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /menu' )
	elif message.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è':
		bot.send_message(message.from_user.id, '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–Ω—è, –º–µ—Å—è—Ü–∞, –≥–æ–¥–∞.üòä')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 1.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ –æ—Ç—á–µ—Ç", —Ç–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–µ–±–µ —Ç–∞–±–ª–∏—Ü—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∑–∞–ø–æ–ª–Ω—è–ª –∑–∞ –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –∏ –≥—Ä–∞—Ñ–∏–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ç–≤–æ–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –ø–æ–≥–æ–¥—ã.üöÄ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 2.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ", —Ç–æ —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–æ–µ–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏.üòú')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 3.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –∫–Ω–æ–ø–∫—É "–°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—É—Å—Ç–æ–π", —Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –≤–Ω–æ—Å–∏–ª –¥–æ —ç—Ç–æ–≥–æ, –ø—Ä–æ–ø–∞–¥—É—Ç.üòÄ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 4.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ç—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–µ—à—å –ø—É–Ω–∫—Ç "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", —Ç–æ —Ç–µ–±–µ –ø—Ä–∏–¥—É—Ç —ç—Ç–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è.üòÇ')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 5.‚ùóÔ∏è\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å —Å –Ω—É–ª—è –≤—Å–µ, —Ç–æ –≤—ã–±–µ—Ä–∏ /start')
		bot.send_message(message.from_user.id,'–ü—É–Ω–∫—Ç 6.‚ùóÔ∏è\n–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —É –≤–∞—Å –ø—Ä–æ–ø–∞–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /menu' )
	elif message.text == '–í–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ': 
		keyboard = create_number(message)
		bot.send_message(message.from_user.id, "–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–∞—é—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /help",reply_markup=keyboard)
	elif message.text == '–°–¥–µ–ª–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø—É—Å—Ç–æ–π':
		newtable(idname)
		bot.send_message(message.from_user.id, "–¢–∞–±–ª–∏—Ü–∞ —Å—Ç–∞–ª–∞ –ø—É—Å—Ç–æ–π!")
	elif message.text == '–ü—Ä–∏—Å–ª–∞—Ç—å –º–Ω–µ –æ—Ç—á–µ—Ç':
		bot.send_message(message.from_user.id,'–¢–∞–±–ª–∏—Ü–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csv:')
		f = open("C:\\telegrambot\\Fails\\" + idname, "rb")
		bot.send_document(message.chat.id, f)
		schedule(idname, idname_photo)
		bot.send_message(message.from_user.id,'–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã:')
		bot.send_photo(message.from_user.id, photo=open('C:\\telegrambot\\Pictures_temp\\' + idname_photo, 'rb'))
		bot.send_message(message.from_user.id,'–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è:')
		bot.send_photo(message.from_user.id, photo=open('C:\\telegrambot\\Pictures_Atm.davl\\' + idname_photo, 'rb'))
	else:
		bot.send_message(message.from_user.id, '–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ–µ, –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–µ—Ä–∏ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è" –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–µ–Ω—é –∏–ª–∏ –≤—ã–±–µ—Ä–∏ /help')
@bot.callback_query_handler(func=lambda call: True)
def i_can(call):
	if call.message:
		global b
		fname=call.from_user.id
		idname = str(fname) + '.csv'
		if call.data == "test7":
			b = "Golova"
			create_batton(call)
		if call.data == "test8":
			b = "Bodrost"
			create_batton(call)
		if call.data == "test9":
			b = "Prodyktivnost"
			create_batton(call)
		if call.data == "test1":
			a = 1
			resh(a, b, idname)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ, –ø—Ä–∏–Ω—è—Ç–æ!")
		elif call.data == "test2":
			a = 2
			resh(a, b, idname)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ, –ø—Ä–∏–Ω—è—Ç–æ!")
		elif call.data == "test3":
			a = 3
			resh(a, b, idname)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ, –ø—Ä–∏–Ω—è—Ç–æ!")
		elif call.data == "test4":
			a = 4
			resh(a, b, idname)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ, –ø—Ä–∏–Ω—è—Ç–æ!")
		elif call.data == "test5":
			a = 5
			resh(a, b, idname)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–°–ø–∞—Å–∏–±–æ, –ø—Ä–∏–Ω—è—Ç–æ!")
def test(i, name):
	if str(df.loc[i, name]) != str("nan"):
		return True
	else:
		return False
def resh(a, b, idname):
	global df
	try:
		df = pd.read_csv('C:\\telegrambot\\Fails\\' + idname)
	except:
		logging.error('—Ñ–∞–π–ª –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω')
	if len(df) == 0:
		i = 0
		p = datetime.date.today()
	else:
		i = len(df)-1
		p = df.loc[i, "Data"]#–æ—Ç–∫—É–¥–∞ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ç–∞–º –ø—É—Å—Ç–æ
	if str(p) != str(datetime.date.today()):
		p = datetime.date.today()
		i = i + 1
	df.loc[i, b] = float(a)
	df.loc[i, "Data"] = datetime.date.today()
	df.loc[i, "Time"] = datetime.datetime.today().strftime("%H:%M:%S")
	df.loc[i, "City"] = 'Saint Petersburg,rus'
	df.loc[i, "Atm.davl"] = pressure()
	df.loc[i, "Temperatyra"] = float(weather())
	print('–ò–º–µ–Ω–Ω–æ –∑–Ω–∞—á–µ–Ω–∏—è:', df.loc[i, "Golova"], df.loc[i, "Prodyktivnost"], df.loc[i, "Bodrost"])
	print('–ò–º–µ–Ω–Ω–æ —Ç–∏–ø—ã:', type(df.loc[i, "Golova"]), type(df.loc[i, "Prodyktivnost"]), type(df.loc[i, "Bodrost"]))
	if test(i, "Golova") and not test(i, "Prodyktivnost") and  not test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = df.loc[i, "Golova"]
	if not test(i, "Golova") and test(i, "Prodyktivnost") and  not test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = df.loc[i, "Prodyktivnost"]
	if not test(i, "Golova") and not test(i, "Prodyktivnost") and  test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = df.loc[i, "Bodrost"]
	if test(i, "Golova") and test(i, "Prodyktivnost") and  not test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = round(((df.loc[i, "Golova"]) + (df.loc[i, "Prodyktivnost"])/2),1)
	if test(i, "Golova") and not test(i, "Prodyktivnost") and  test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = round(((df.loc[i, "Golova"] + df.loc[i, "Bodrost"])/2),1)
	if not test(i, "Golova") and test(i, "Prodyktivnost") and  test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = round(((df.loc[i, "Prodyktivnost"] + df.loc[i, "Bodrost"])/2),1)
	if test(i, "Golova") and test(i, "Prodyktivnost") and  test(i, "Bodrost"):
		df.loc[i, "Samochyvstvie"] = round((((df.loc[i, "Prodyktivnost"]) + (df.loc[i, "Golova"]) + (df.loc[i, "Bodrost"]))/3),1)
	df.to_csv('C:\\telegrambot\\Fails\\' + idname, index=False)
def weather():
	owm = OWM(tokens.weather)
	mgr = owm.weather_manager()
	weather = mgr.weather_at_place('Saint Petersburg,rus').weather
	temp_dict_kelvin = weather.temperature()   
	w = ((temp_dict_kelvin['temp_min']+temp_dict_kelvin['temp_max'])/2)-273.15
	return int(w)
def pressure():
	owm = OWM(tokens.weather)
	mgr = owm.weather_manager()
	pressure_dict = mgr.weather_at_place('Saint Petersburg,rus').weather.pressure  # 'weather', not 'observation'
	return int(pressure_dict['press']*100/133.3-13)
def newtable(idname):
	with open("C:\\telegrambot\\Fails\\" + idname,"w",newline="") as file_writer:
		fields=['Data', 'Time', 'City', 'Samochyvstvie','Golova','Bodrost','Prodyktivnost','Atm.davl','Temperatyra']
		writer=csv.DictWriter(file_writer,fieldnames=fields)
		writer.writeheader()
def create_batton(message):
	keyboard = types.InlineKeyboardMarkup()
	keyboard.add(types.InlineKeyboardButton(text="–û—á–µ–Ω—å –ø–ª–æ—Ö–æ", callback_data="test1"))
	keyboard.add(types.InlineKeyboardButton(text="–ü–ª–æ—Ö–æ", callback_data="test2"))
	keyboard.add(types.InlineKeyboardButton(text="–ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data="test3"))
	keyboard.add(types.InlineKeyboardButton(text="–•–æ—Ä–æ—à–æ", callback_data="test4"))
	keyboard.add(types.InlineKeyboardButton(text="–û—Ç–ª–∏—á–Ω–æ", callback_data="test5"))
	bot.send_message(message.from_user.id, "–í—ã–±–∏—Ä–∞–π—Ç–µ", reply_markup=keyboard)
def create_number(message):
	keyboard = types.InlineKeyboardMarkup()
	keyboard.add(types.InlineKeyboardButton(text="–°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–ª–æ–≤—ã üß†", callback_data="test7"))
	keyboard.add(types.InlineKeyboardButton(text="–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ–¥—Ä–æ—Å—Ç–∏ü¶µ", callback_data="test8"))
	keyboard.add(types.InlineKeyboardButton(text="–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏üñäÔ∏è", callback_data="test9"))
	return keyboard
def schedule(idname, idname_photo):
	data = pd.read_csv('C:\\telegrambot\\Fails\\' + idname,sep=r'\s*,\s*', header=0, encoding='utf8', engine='python')
	data = data.sort_values('Temperatyra',ascending=True)
	data.plot(kind='scatter', x = 'Temperatyra', y = 'Samochyvstvie')
	plt.xlabel('–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞')
	plt.ylabel('–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ')
	plt.title('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã')
	plt.savefig('C:\\telegrambot\\Pictures_temp\\' + idname_photo)
	data = data.sort_values('Atm.davl',ascending=True)
	data.plot(kind='scatter', x = 'Atm.davl', y = 'Samochyvstvie')
	plt.xlabel('–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ')
	plt.ylabel('–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ')
	plt.title('–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –æ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è')
	plt.savefig('C:\\telegrambot\\Pictures_Atm.davl\\' + idname_photo)
bot.polling(none_stop = True, interval = 0)
